{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>\u041c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b \u043f\u043e \u043a\u0443\u0440\u0441\u0443 \"\u0418\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b \u0432\u0435\u0431-\u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438\" \u0418\u0422\u041c\u041e 2024-2025.</p>"},{"location":"#_1","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b","text":"<ol> <li>\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f 1 -FastAPI</li> <li>\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f 2 - Async, Multiprocessing, Threading</li> <li>\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f 3 - \u0423\u043f\u0430\u043a\u043e\u0432\u043a\u0430 FastAPI \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432 Docker, \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u041e\u0447\u0435\u0440\u0435\u0434\u0438</li> </ol>"},{"location":"lab1/","title":"Hackathon Management System API Documentation","text":""},{"location":"lab1/#_1","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0441\u0438\u0441\u0442\u0435\u043c\u044b","text":"<p>\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u0438 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0445\u0430\u043a\u0430\u0442\u043e\u043d\u043e\u0432 \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u043e\u043c: - \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 - \u0424\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434 - \u041f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u044f \u0437\u0430\u0434\u0430\u0447 - \u041e\u0446\u0435\u043d\u043a\u0430 \u0440\u0430\u0431\u043e\u0442</p>"},{"location":"lab1/#_2","title":"\u0421\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u044b","text":""},{"location":"lab1/#1-user","title":"1. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c (User)","text":"<p>\u041f\u043e\u043b\u044f: - <code>id</code> - \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 - <code>name</code> - \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f - <code>email</code> - \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0430\u044f \u043f\u043e\u0447\u0442\u0430 (\u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0435) - <code>phone</code> - \u043a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u044b\u0439 \u0442\u0435\u043b\u0435\u0444\u043e\u043d - <code>skills</code> - \u043d\u0430\u0432\u044b\u043a\u0438 (\u0441\u0442\u0440\u043e\u043a\u0430)</p>"},{"location":"lab1/#2-team","title":"2. \u041a\u043e\u043c\u0430\u043d\u0434\u0430 (Team)","text":"<p>\u041f\u043e\u043b\u044f: - <code>id</code> - \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 - <code>name</code> - \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b - <code>description</code> - \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b</p>"},{"location":"lab1/#3-task","title":"3. \u0417\u0430\u0434\u0430\u0447\u0430 (Task)","text":"<p>\u041f\u043e\u043b\u044f: - <code>id</code> - \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 - <code>description</code> - \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 - <code>requirements</code> - \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f - <code>evaluation_criteria</code> - \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u0438 \u043e\u0446\u0435\u043d\u043a\u0438</p>"},{"location":"lab1/#4-work","title":"4. \u0420\u0430\u0431\u043e\u0442\u0430 (Work)","text":"<p>\u041f\u043e\u043b\u044f: - <code>id</code> - \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 - <code>task_id</code> - ID \u0437\u0430\u0434\u0430\u0447\u0438 - <code>team_id</code> - ID \u043a\u043e\u043c\u0430\u043d\u0434\u044b - <code>file</code> - \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0444\u0430\u0439\u043b \u0440\u0430\u0431\u043e\u0442\u044b</p>"},{"location":"lab1/#5-evaluation","title":"5. \u041e\u0446\u0435\u043d\u043a\u0430 (Evaluation)","text":"<p>\u041f\u043e\u043b\u044f: - <code>id</code> - \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 - <code>work_id</code> - ID \u0440\u0430\u0431\u043e\u0442\u044b - <code>score</code> - \u0431\u0430\u043b\u043b\u044b - <code>feedback</code> - \u043e\u0431\u0440\u0430\u0442\u043d\u0430\u044f \u0441\u0432\u044f\u0437\u044c</p>"},{"location":"lab1/#crud","title":"CRUD \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438","text":""},{"location":"lab1/#_3","title":"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438","text":"\u041c\u0435\u0442\u043e\u0434 \u041f\u0443\u0442\u044c \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 GET <code>/users</code> \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 - GET <code>/user/{user_id}</code> \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e ID - POST <code>/user</code> \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f <code>{\"name\": \"string\", \"email\": \"string\", \"phone\": \"string\", \"skills\": \"string\"}</code> PATCH <code>/user/{user_id}</code> \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0427\u0430\u0441\u0442\u0438\u0447\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 DELETE <code>/user/{user_id}</code> \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f -"},{"location":"lab1/#_4","title":"\u041a\u043e\u043c\u0430\u043d\u0434\u044b","text":"\u041c\u0435\u0442\u043e\u0434 \u041f\u0443\u0442\u044c \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 GET <code>/teams</code> \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b - GET <code>/team/{team_id}</code> \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u043f\u043e ID - POST <code>/team</code> \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u0443 <code>{\"name\": \"string\", \"description\": \"string\"}</code> + \u0441\u043f\u0438\u0441\u043e\u043a \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 PATCH <code>/team/{team_id}</code> \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0427\u0430\u0441\u0442\u0438\u0447\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 DELETE <code>/team/{team_id}</code> \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 -"},{"location":"lab1/#_5","title":"\u0417\u0430\u0434\u0430\u0447\u0438","text":"\u041c\u0435\u0442\u043e\u0434 \u041f\u0443\u0442\u044c \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 GET <code>/tasks</code> \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 - GET <code>/task/{task_id}</code> \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0443 \u043f\u043e ID - POST <code>/task</code> \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u0437\u0430\u0434\u0430\u0447\u0443 <code>{\"description\": \"string\", \"requirements\": \"string\", \"evaluation_criteria\": \"string\"}</code> PATCH <code>/task/{task_id}</code> \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0443 \u0427\u0430\u0441\u0442\u0438\u0447\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 DELETE <code>/task/{task_id}</code> \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u0443 -"},{"location":"lab1/#_6","title":"\u0420\u0430\u0431\u043e\u0442\u044b","text":"\u041c\u0435\u0442\u043e\u0434 \u041f\u0443\u0442\u044c \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 GET <code>/works</code> \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435 \u0440\u0430\u0431\u043e\u0442\u044b - GET <code>/work/{work_id}</code> \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u043f\u043e ID - POST <code>/work</code> \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 <code>{\"task_id\": int, \"team_id\": int, \"file\": \"string\"}</code> PATCH <code>/work/{work_id}</code> \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u0427\u0430\u0441\u0442\u0438\u0447\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 DELETE <code>/work/{work_id}</code> \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 -"},{"location":"lab1/#_7","title":"\u041e\u0446\u0435\u043d\u043a\u0438","text":"\u041c\u0435\u0442\u043e\u0434 \u041f\u0443\u0442\u044c \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 GET <code>/evaluation/{evaluation_id}</code> \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0443 \u043f\u043e ID - POST <code>/evaluation</code> \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0443 <code>{\"work_id\": int, \"score\": int, \"feedback\": \"string\"}</code>"},{"location":"lab2/","title":"\u041f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u044b\u0435 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0438 \u0432\u0435\u0431-\u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u0432 Python","text":""},{"location":"lab2/#_1","title":"\u041e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435","text":"<ul> <li>\u041f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u044b\u0435 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f \u0438 \u0432\u0435\u0431-\u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u0432 Python</li> <li>\u041e\u0433\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435</li> <li>\u0417\u0430\u0434\u0430\u0447\u0430 1: threading, multiprocessing \u0438 async<ul> <li>Threading</li> <li>Async</li> <li>Multiprocessing</li> </ul> </li> <li>\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2:<ul> <li>Async:</li> <li>Multipricessing:</li> <li>Threading:</li> </ul> </li> </ul>"},{"location":"lab2/#1-threading-multiprocessing-async","title":"\u0417\u0430\u0434\u0430\u0447\u0430 1: threading, multiprocessing \u0438 async","text":""},{"location":"lab2/#threading","title":"Threading","text":"<pre><code>import threading\nimport time\n\ndef calculate_sum(start, end, result, index):\n    result[index] = sum(range(start, end + 1))\n\ndef main():\n    total = 1000_000_000\n    threads_num = 4\n    chunk_size = total // threads_num\n    results = [0] * threads_num\n    threads = []\n\n    start_time = time.time()\n\n    for i in range(threads_num):\n        start = i * chunk_size + 1\n        end = (i + 1) * chunk_size if i != threads_num - 1 else total\n        thread = threading.Thread(\n            target=calculate_sum,\n            args=(start, end, results, i)\n        )\n        threads.append(thread)\n        thread.start()\n\n    for thread in threads:\n        thread.join()\n\n    total_sum = sum(results)\n    end_time = time.time()\n\n    print(f\"Threading sum: {total_sum}\")\n    print(f\"Time: {end_time - start_time:.2f} seconds\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"lab2/#async","title":"Async","text":"<pre><code>import asyncio\nimport time\n\nasync def calculate_sum(start, end):\n    return sum(range(start, end + 1))\n\nasync def main():\n    total = 1000_000_000\n    tasks_num = 4\n    chunk_size = total // tasks_num\n    tasks = []\n\n    start_time = time.time()\n\n    for i in range(tasks_num):\n        start = i * chunk_size + 1\n        end = (i + 1) * chunk_size if i != tasks_num - 1 else total\n        tasks.append(asyncio.create_task(calculate_sum(start, end)))\n\n    results = await asyncio.gather(*tasks)\n    total_sum = sum(results)\n    end_time = time.time()\n\n    print(f\"Async sum: {total_sum}\")\n    print(f\"Time: {end_time - start_time:.2f} seconds\")\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre>"},{"location":"lab2/#multiprocessing","title":"Multiprocessing","text":"<pre><code>from multiprocessing import Process, Manager\nimport time\n\ndef calculate_sum(start, end, result, index):\n    result[index] = sum(range(start, end + 1))\n\ndef main():\n    total = 1000_000_000\n    processes_num = 4\n    chunk_size = total // processes_num\n\n    with Manager() as manager:\n        results = manager.list([0] * processes_num)\n        processes = []\n\n        start_time = time.time()\n\n        for i in range(processes_num):\n            start = i * chunk_size + 1\n            end = (i + 1) * chunk_size if i != processes_num - 1 else total\n            process = Process(\n                target=calculate_sum,\n                args=(start, end, results, i))\n            processes.append(process)\n            process.start()\n\n        for process in processes:\n            process.join()\n\n        total_sum = sum(results)\n        end_time = time.time()\n\n    print(f\"Multiprocessing sum: {total_sum}\")\n    print(f\"Time: {end_time - start_time:.2f} seconds\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"lab2/#2","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2:","text":"<pre><code>urls = [\n    \"https://xmas-hack.ru\",\n    \"https://en.wikipedia.org/wiki/Hackathon\",\n    \"https://www.python.org\",\n    \"https://wikipedia.org/wiki/Hackathon\",\n    \"https://www.kaggle.com/events\",\n    \"https://techcrunch.com/startups/\",\n]\n</code></pre>"},{"location":"lab2/#async_1","title":"Async:","text":"<pre><code>import asyncio\nimport time\nimport aiohttp\nimport ssl\nimport certifi\nfrom bs4 import BeautifulSoup\nfrom sqlmodel import Session, SQLModel\nfrom connection import engine\nfrom lr2.task2.urls import urls\nfrom models import Page\n\nasync def parse_and_save(url, session):\n    try:\n        async with session.get(url) as response:\n            if response.status != 200:\n                print(f\"HTTP Error {response.status} for {url}\")\n                return\n\n            html = await response.text()\n            bs = BeautifulSoup(html, \"html.parser\")\n\n            title = None\n            if bs.title and bs.title.string:\n                title = bs.title.string.strip()\n            elif bs.find(\"h1\"):\n                title = bs.find(\"h1\").text.strip()\n\n            with Session(engine) as db:\n                page = Page(url=url, title=title)\n                db.add(page)\n                db.commit()\n                print(f\"Success: {url} | Title: {title if title else 'No title found'}\")\n\n    except Exception as e:\n        print(f\"Error parsing {url}: {str(e)}\")\n\nasync def main():\n    ssl_context = ssl.create_default_context(cafile=certifi.where())\n    connector = aiohttp.TCPConnector(\n        ssl=ssl_context,\n        limit=10,\n        force_close=True,\n        enable_cleanup_closed=True\n    )\n\n    start = time.time()\n\n    async with aiohttp.ClientSession(\n            connector=connector,\n            timeout=aiohttp.ClientTimeout(total=15)\n    ) as session:\n        tasks = [parse_and_save(url, session) for url in urls]\n        await asyncio.gather(*tasks)\n\n    end = time.time()\n    print(f\"\\nAsync time: {end - start:.2f} seconds\")\n\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre> <pre><code> Async time: 0.70 seconds\n</code></pre>"},{"location":"lab2/#multipricessing","title":"Multipricessing:","text":"<pre><code>from multiprocessing import Pool\nimport time\nimport requests\nfrom bs4 import BeautifulSoup\nfrom sqlmodel import Session\nfrom connection import engine\nfrom models import Page\nfrom lr2.task2.urls import urls\n\ndef parse_and_save(url):\n    try:\n        response = requests.get(url, timeout=10)\n        response.raise_for_status()\n        bs = BeautifulSoup(response.text, \"html.parser\")\n        title = bs.title.string if bs.title else None\n\n        with Session(engine) as db:\n            page = Page(url=url, title=title)\n            db.add(page)\n            db.commit()\n            print(f\"Parsed: {url} | Title: {title}\")\n    except Exception as e:\n        print(f\"Error parsing {url}: {e}\")\n\ndef main():\n    start = time.time()\n    with Pool(4) as pool:\n        pool.map(parse_and_save, urls)\n\n    end = time.time()\n    print(f\"\\nMultiprocessing time: {end - start:.2f} seconds\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <pre><code> Multiprocessing time: 1.61 seconds\n</code></pre>"},{"location":"lab2/#threading_1","title":"Threading:","text":"<pre><code>import threading\nimport time\nimport requests\nfrom bs4 import BeautifulSoup\nfrom sqlmodel import Session, SQLModel\nfrom connection import engine\nfrom lr2.task2.urls import urls\nfrom models import Page\n\ndef parse_and_save(url):\n    try:\n        response = requests.get(url, timeout=10)\n        response.raise_for_status()\n        bs = BeautifulSoup(response.text, \"html.parser\")\n        title = bs.title.string if bs.title else None\n\n        with Session(engine) as db:\n            page = Page(url=url, title=title)\n            db.add(page)\n            db.commit()\n            print(f\"Parsed: {url} | Title: {title}\")\n    except Exception as e:\n        print(f\"Error parsing {url}: {e}\")\n\ndef main():\n    threads = []\n\n    start = time.time()\n    for url in urls:\n        thread = threading.Thread(target=parse_and_save, args=(url,))\n        threads.append(thread)\n        thread.start()\n\n    for thread in threads:\n        thread.join()\n\n    end = time.time()\n    print(f\"\\nThreading time: {end - start:.2f} seconds\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <pre><code> Threading time: 0.90 seconds\n</code></pre>"},{"location":"lab3/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u21163","text":""},{"location":"lab3/#_1","title":"\u0426\u0435\u043b\u044c","text":"<p>\u041d\u0430\u0443\u0447\u0438\u0442\u044c\u0441\u044f \u0443\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0442\u044c FastAPI \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0432 Docker, \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0430\u0440\u0441\u0435\u0440 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u043f\u0430\u0440\u0441\u0435\u0440 \u0447\u0435\u0440\u0435\u0437 API \u0438 \u043e\u0447\u0435\u0440\u0435\u0434\u044c.</p> <ol> <li>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 FastAPI \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f: \u0421\u043e\u0437\u0434\u0430\u043d\u043e \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u043d\u043e\u043c\u0435\u0440 1</li> <li>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445: \u0421\u043e\u0437\u0434\u0430\u043d\u043e \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u043d\u043e\u043c\u0435\u0440 1</li> <li>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0441\u0435\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445: \u0421\u043e\u0437\u0434\u0430\u043d\u043e \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u043d\u043e\u043c\u0435\u0440 2</li> <li>\u0420\u0435\u0443\u043b\u0438\u0437\u0443\u0439\u0442\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u0437\u043e\u0432\u0430 \u043f\u0430\u0440\u0441\u0435\u0440\u0430 \u043f\u043e http \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 FastAPI \u0434\u043b\u044f \u043f\u0430\u0440\u0441\u0435\u0440\u0430 \u0438\u043b\u0438 \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u043e\u0439 socket \u0438\u043b\u0438 \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u043c\u0438.</li> <li>\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 Dockerfile:</li> </ol> <p>\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c Dockerfile \u0434\u043b\u044f \u0443\u043f\u0430\u043a\u043e\u0432\u043a\u0438 FastAPI \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u043f\u0430\u0440\u0435\u0441\u0435\u0440\u043e\u043c. \u0412 Dockerfile \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043e\u0431\u0440\u0430\u0437, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438, \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u0432 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0417\u0430\u0447\u0435\u043c: Docker \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u043f\u0430\u043a\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438 \u0432\u0441\u0435 \u0435\u0433\u043e \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0432 \u0435\u0434\u0438\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440, \u0447\u0442\u043e \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0438\u0441\u0442\u0435\u043d\u0442\u043d\u043e\u0441\u0442\u044c \u0441\u0440\u0435\u0434\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0438 \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u0435. \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438: FastAPI \u0438 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u044b \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c PostgreSQL \u0432 Docker: \u043e\u0442 \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u043a \u0441\u043b\u043e\u0436\u043d\u043e\u043c\u0443 \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f Dockerfile</p> <ol> <li>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 Docker Compose \u0444\u0430\u0439\u043b\u0430:</li> </ol> <p>\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c docker-compose.yml \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0440\u043a\u0435\u0441\u0442\u0440\u043e\u043c \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0438\u0445 FastAPI \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043f\u0430\u0440\u0441\u0435\u0440 \u0434\u0430\u043d\u043d\u044b\u0445. \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435 \u0441\u0435\u0440\u0432\u0438\u0441\u044b, \u0443\u043a\u0430\u0436\u0438\u0442\u0435 \u043f\u043e\u0440\u0442\u044b \u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043c\u0435\u0436\u0434\u0443 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u043c\u0438. \u0417\u0430\u0447\u0435\u043c: Docker Compose \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0430\u043c\u0438, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044f \u0432\u0430\u043c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u0438 \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u0441\u0435\u0440\u0432\u0438\u0441\u044b \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u0434\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438. \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438: \u0417\u0430\u0447\u0435\u043c \u043d\u0443\u0436\u043d\u044b \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043e\u0440\u043a\u0435\u0441\u0442\u0440\u0430\u0446\u0438\u0438? Developing a FastAPI Application in a Docker Container \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f Docker Compose</p> <ol> <li>\u041f\u043e\u0434\u0437\u0430\u0434\u0430\u0447\u0430 2: \u0412\u044b\u0437\u043e\u0432 \u043f\u0430\u0440\u0441\u0435\u0440\u0430 \u0438\u0437 FastAPI</li> </ol> <p>\u042d\u043d\u0434\u043f\u043e\u0438\u043d\u0442 \u0432 FastAPI \u0434\u043b\u044f \u0432\u044b\u0437\u043e\u0432\u0430 \u043f\u0430\u0440\u0441\u0435\u0440\u0430**: \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0432 FastAPI \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0435\u043d\u0434\u043f\u043e\u0438\u043d\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0441 URL \u0434\u043b\u044f \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u0430\u0440\u0441\u0435\u0440\u0443 (\u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u043e\u043c\u0443 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0435) \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u043e\u0442\u0432\u0435\u0442 \u0441 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0417\u0430\u0447\u0435\u043c: \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043f\u0430\u0440\u0441\u0435\u0440\u0430 \u0432 \u0432\u0430\u0448\u0435 \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044f \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u0447\u0435\u0440\u0435\u0437 API.</p> <p>docker-compose file</p> <pre><code>services:\n  web:\n    build:\n      context: ./app\n      dockerfile: Dockerfile\n    ports:\n      - \"8000:8000\"\n    depends_on:\n      - db\n    command: uvicorn main:app --host 0.0.0.0 --port 8000\n    environment:\n      PYTHONPATH: /app\n\n  db:\n    image: postgres:17\n    environment:\n      POSTGRES_USER: postgres\n      POSTGRES_PASSWORD: postgres\n      POSTGRES_DB: postgres\n    ports:\n      - \"5432:5432\"\n    volumes:\n      - postgres_data:/var/lib/postgresql/data/\n\n  parser:\n    build:\n      context: ./parser\n      dockerfile: Dockerfile.async\n    container_name: parser_app\n    depends_on:\n      - db\n    ports:\n      - \"9000:9000\"\n    volumes:\n      - ./parser:/parser\n    command: [ \"uvicorn\", \"main:app\", \"--host\", \"0.0.0.0\", \"--port\", \"9000\" ]\n\nvolumes:\n  postgres_data:\n</code></pre> <p></p>"}]}